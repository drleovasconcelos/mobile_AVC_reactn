import React, { useState } from 'react';
import {
    View,
    Text,
    StyleSheet,
    SafeAreaView,
    ScrollView,
    TouchableOpacity,
    TextInput,
    KeyboardAvoidingView,
    Platform
} from 'react-native';
import Footer from '../components/Footer';

const ExameFisico = ({ navigation, route }) => {
    const { paciente } = route.params;
    
    // Estado para controlar quais se√ß√µes est√£o expandidas
    const [expandedSections, setExpandedSections] = useState({});
    
    // Estado para os dados do exame f√≠sico
    const [formData, setFormData] = useState({
        // Se√ß√£o 1: Hist√≥rico Funcional
        atividadesDiarias: '',
        limitacoesFuncionais: '',
        independenciaFuncional: '',
        usoDispositivos: '',
        observacoesFuncionais: '',
        
        // Se√ß√£o 2: Impress√£o Geral
        nivelConsciencia: '',
        estadoGeral: '',
        postura: '',
        marcha: '',
        equilibrio: '',
        observacoesImpressao: '',
        
        // Se√ß√£o 3: Avalia√ß√£o da Dor
        localizacaoDor: {
            cabeca: false,
            pescoco: false,
            ombro: false,
            braco: false,
            antebraco: false,
            mao: false,
            torax: false,
            costas: false,
            lombar: false,
            quadril: false,
            coxa: false,
            perna: false,
            pe: false,
            generalizada: false
        },
        observacoesLocalizacao: '',
        statusExame: '', // Bom (+1) / Aten√ß√£o (0) / Ruim (-1)
        tipoDor: {
            aguda: false,
            cronica: false,
            irradiada: false,
            pontada: false,
            queimacao: false,
            pressao: false,
            latejante: false,
            caimbra: false,
            formigamento: false,
            dormencia: false,
            eletrica: false
        },
        observacoesTipoDor: '',
        intensidadeDor: {
            leve: false,
            moderada: false,
            intensa: false,
            insuportavel: false
        },
        observacoesIntensidade: '',
        frequenciaDuracao: {
            constante: false,
            intermitente: false,
            matinal: false,
            vespertina: false,
            noturna: false,
            aoMovimento: false,
            emRepouso: false
        },
        observacoesFrequencia: '',
        irradiacaoDor: {
            nenhuma: false,
            membroSuperior: false,
            membroInferior: false,
            cabeca: false,
            torax: false,
            costas: false
        },
        observacoesIrradiacao: '',
        escalaDor: '',
        observacoesDor: '',
        
        // Se√ß√£o 4: Sinais Vitais
        pressaoArterial: '',
        frequenciaCardiaca: '',
        frequenciaRespiratoria: '',
        temperatura: '',
        saturacaoOxigenio: '',
        observacoesSinaisVitais: '',
        
        // Se√ß√£o 5: Exames Fisioterap√™uticos
        inspecaoPostural: '',
        palpa√ß√£o: '',
        amplitudeMovimento: '',
        forcaMuscular: '',
        tonusMuscular: '',
        coordenacao: '',
        equilibrioEstatico: '',
        equilibrioDinamico: '',
        reflexos: '',
        reflexosPatologicos: '',
        manobrasDeficitarias: '',
        padraoMarcha: '',
        sensibilidadeSuperficial: '',
        sensibilidadeProfunda: '',
        observacoesExames: '',
        
        // Se√ß√£o 6: Avalia√ß√£o Respirat√≥ria
        padraoRespiratorio: '',
        expansibilidadeToracica: '',
        auscultaPulmonar: '',
        tosse: '',
        expectoracao: '',
        dispneia: '',
        observacoesRespiratorias: '',
        
        // Se√ß√£o 7: Avalia√ß√£o dos Sistemas
        sistemaRespiratorio: '',
        sistemaCardiovascular: '',
        sistemaGastrointestinal: '',
        sistemaNeurologico: '',
        sistemaGeniturinario: '',
        sistemaMusculoesqueletico: '',
        sistemaDermatologico: '',
        observacoesSistemas: '',
        
        // Se√ß√£o 8: Conduta Fisioterap√™utica
        hipoteseDiagnostica: '',
        objetivosTerapeuticos: '',
        planoTerapeutico: '',
        frequenciaTratamento: '',
        observacoesConduta: ''
    });

    // Fun√ß√£o para alternar o estado de expans√£o de uma se√ß√£o
    const toggleSection = (sectionKey) => {
        setExpandedSections(prev => ({
            ...prev,
            [sectionKey]: !prev[sectionKey]
        }));
    };

    // Dados das se√ß√µes
    const sections = [
        {
            key: 'historicoFuncional',
            title: '1. HIST√ìRICO FUNCIONAL',
            icon: 'üìã',
            content: 'Atividades di√°rias, limita√ß√µes funcionais...'
        },
        {
            key: 'impressaoGeral',
            title: '2. IMPRESS√ÉO GERAL',
            icon: 'üëÅÔ∏è',
            content: 'N√≠vel de consci√™ncia, postura, marcha...'
        },
        {
            key: 'avaliacaoDor',
            title: '3. AVALIA√á√ÉO DA DOR',
            icon: 'üò£',
            content: 'Localiza√ß√£o, intensidade, caracter√≠sticas...'
        },
        {
            key: 'sinaisVitais',
            title: '4. SINAIS VITAIS',
            icon: 'üíì',
            content: 'PA, FC, FR, temperatura, SpO2...'
        },
        {
            key: 'examesFisioterapeuticos',
            title: '5. EXAMES FISIOTERAP√äUTICOS',
            icon: 'üî¨',
            content: 'Inspe√ß√£o, palpa√ß√£o, ADM, for√ßa muscular...'
        },
        {
            key: 'avaliacaoRespiratoria',
            title: '6. AVALIA√á√ÉO RESPIRAT√ìRIA',
            icon: 'ü´Å',
            content: 'Padr√£o respirat√≥rio, expansibilidade...'
        },
        {
            key: 'avaliacaoSistemas',
            title: '7. AVALIA√á√ÉO DOS SISTEMAS',
            icon: '‚öïÔ∏è',
            content: 'Respirat√≥rio, cardiovascular, neurol√≥gico...'
        },
        {
            key: 'condutaFisioterapeutica',
            title: '8. CONDUTA FISIOTERAP√äUTICA',
            icon: 'üéØ',
            content: 'Hip√≥tese diagn√≥stica, objetivos, plano...'
        }
    ];

    // Fun√ß√£o para renderizar o conte√∫do espec√≠fico de cada se√ß√£o
    const renderSectionContent = (sectionKey) => {
        switch(sectionKey) {
            case 'historicoFuncional':
                return (
                    <View style={styles.formContent}>
                        <View style={styles.formRow}>
                            <Text style={styles.formLabel}>Atividades Di√°rias:</Text>
                            <TextInput
                                style={[styles.textInput, { height: 80, textAlignVertical: 'top' }]}
                                value={formData.atividadesDiarias}
                                onChangeText={(text) => setFormData({...formData, atividadesDiarias: text})}
                                placeholder="Descreva as atividades di√°rias do paciente"
                                multiline
                            />
                        </View>
                        
                        <View style={styles.formRow}>
                            <Text style={styles.formLabel}>Limita√ß√µes Funcionais:</Text>
                            <TextInput
                                style={[styles.textInput, { height: 80, textAlignVertical: 'top' }]}
                                value={formData.limitacoesFuncionais}
                                onChangeText={(text) => setFormData({...formData, limitacoesFuncionais: text})}
                                placeholder="Descreva as limita√ß√µes funcionais"
                                multiline
                            />
                        </View>
                        
                        <View style={styles.formRow}>
                            <Text style={styles.formLabel}>Independ√™ncia Funcional:</Text>
                            <TextInput
                                style={styles.textInput}
                                value={formData.independenciaFuncional}
                                onChangeText={(text) => setFormData({...formData, independenciaFuncional: text})}
                                placeholder="N√≠vel de independ√™ncia funcional"
                            />
                        </View>
                        
                        <View style={styles.formRow}>
                            <Text style={styles.formLabel}>Uso de Dispositivos:</Text>
                            <TextInput
                                style={styles.textInput}
                                value={formData.usoDispositivos}
                                onChangeText={(text) => setFormData({...formData, usoDispositivos: text})}
                                placeholder="Dispositivos de aux√≠lio utilizados"
                            />
                        </View>
                        
                        <View style={styles.formRow}>
                            <Text style={styles.formLabel}>Observa√ß√µes:</Text>
                            <TextInput
                                style={[styles.textInput, { height: 80, textAlignVertical: 'top' }]}
                                value={formData.observacoesFuncionais}
                                onChangeText={(text) => setFormData({...formData, observacoesFuncionais: text})}
                                placeholder="Observa√ß√µes sobre o hist√≥rico funcional"
                                multiline
                            />
                        </View>
                    </View>
                );
                
            case 'impressaoGeral':
                return (
                    <View style={styles.formContent}>
                        <View style={styles.formRow}>
                            <Text style={styles.formLabel}>N√≠vel de Consci√™ncia:</Text>
                            <TextInput
                                style={styles.textInput}
                                value={formData.nivelConsciencia}
                                onChangeText={(text) => setFormData({...formData, nivelConsciencia: text})}
                                placeholder="N√≠vel de consci√™ncia do paciente"
                            />
                        </View>
                        
                        <View style={styles.formRow}>
                            <Text style={styles.formLabel}>Estado Geral:</Text>
                            <TextInput
                                style={styles.textInput}
                                value={formData.estadoGeral}
                                onChangeText={(text) => setFormData({...formData, estadoGeral: text})}
                                placeholder="Estado geral do paciente"
                            />
                        </View>
                        
                        <View style={styles.formRow}>
                            <Text style={styles.formLabel}>Postura:</Text>
                            <TextInput
                                style={[styles.textInput, { height: 80, textAlignVertical: 'top' }]}
                                value={formData.postura}
                                onChangeText={(text) => setFormData({...formData, postura: text})}
                                placeholder="Descreva a postura do paciente"
                                multiline
                            />
                        </View>
                        
                        <View style={styles.formRow}>
                            <Text style={styles.formLabel}>Marcha:</Text>
                            <TextInput
                                style={styles.textInput}
                                value={formData.marcha}
                                onChangeText={(text) => setFormData({...formData, marcha: text})}
                                placeholder="Caracter√≠sticas da marcha"
                            />
                        </View>
                        
                        <View style={styles.formRow}>
                            <Text style={styles.formLabel}>Equil√≠brio:</Text>
                            <TextInput
                                style={styles.textInput}
                                value={formData.equilibrio}
                                onChangeText={(text) => setFormData({...formData, equilibrio: text})}
                                placeholder="Avalia√ß√£o do equil√≠brio"
                            />
                        </View>
                        
                        <View style={styles.formRow}>
                            <Text style={styles.formLabel}>Observa√ß√µes:</Text>
                            <TextInput
                                style={[styles.textInput, { height: 80, textAlignVertical: 'top' }]}
                                value={formData.observacoesImpressao}
                                onChangeText={(text) => setFormData({...formData, observacoesImpressao: text})}
                                placeholder="Observa√ß√µes sobre impress√£o geral"
                                multiline
                            />
                        </View>
                    </View>
                );
                
            case 'avaliacaoDor':
                return (
                    <View style={styles.formContent}>
                        {/* Localiza√ß√£o da Dor */}
                        <View style={styles.formRow}>
                            <Text style={styles.formLabel}>Localiza√ß√£o da Dor:</Text>
                            <View style={styles.checkboxContainer}>
                                <TouchableOpacity 
                                    style={[
                                        styles.checkboxRow,
                                        formData.localizacaoDor.cabeca && styles.checkboxRowSelected
                                    ]}
                                    onPress={() => setFormData({
                                        ...formData, 
                                        localizacaoDor: {
                                            ...formData.localizacaoDor,
                                            cabeca: !formData.localizacaoDor.cabeca
                                        }
                                    })}
                                >
                                    <Text style={[
                                        styles.checkboxText,
                                        formData.localizacaoDor.cabeca && styles.checkboxTextSelected
                                    ]}>
                                        {formData.localizacaoDor.cabeca ? '‚òë' : '‚òê'} Cabe√ßa
                                    </Text>
                                </TouchableOpacity>
                                
                                <TouchableOpacity 
                                    style={[
                                        styles.checkboxRow,
                                        formData.localizacaoDor.pescoco && styles.checkboxRowSelected
                                    ]}
                                    onPress={() => setFormData({
                                        ...formData, 
                                        localizacaoDor: {
                                            ...formData.localizacaoDor,
                                            pescoco: !formData.localizacaoDor.pescoco
                                        }
                                    })}
                                >
                                    <Text style={[
                                        styles.checkboxText,
                                        formData.localizacaoDor.pescoco && styles.checkboxTextSelected
                                    ]}>
                                        {formData.localizacaoDor.pescoco ? '‚òë' : '‚òê'} Pesco√ßo
                                    </Text>
                                </TouchableOpacity>
                                
                                <TouchableOpacity 
                                    style={[
                                        styles.checkboxRow,
                                        formData.localizacaoDor.ombro && styles.checkboxRowSelected
                                    ]}
                                    onPress={() => setFormData({
                                        ...formData, 
                                        localizacaoDor: {
                                            ...formData.localizacaoDor,
                                            ombro: !formData.localizacaoDor.ombro
                                        }
                                    })}
                                >
                                    <Text style={[
                                        styles.checkboxText,
                                        formData.localizacaoDor.ombro && styles.checkboxRowSelected
                                    ]}>
                                        {formData.localizacaoDor.ombro ? '‚òë' : '‚òê'} Ombro
                                    </Text>
                                </TouchableOpacity>
                                
                                <TouchableOpacity 
                                    style={[
                                        styles.checkboxRow,
                                        formData.localizacaoDor.braco && styles.checkboxRowSelected
                                    ]}
                                    onPress={() => setFormData({
                                        ...formData, 
                                        localizacaoDor: {
                                            ...formData.localizacaoDor,
                                            braco: !formData.localizacaoDor.braco
                                        }
                                    })}
                                >
                                    <Text style={[
                                        styles.checkboxText,
                                        formData.localizacaoDor.braco && styles.checkboxTextSelected
                                    ]}>
                                        {formData.localizacaoDor.braco ? '‚òë' : '‚òê'} Bra√ßo
                                    </Text>
                                </TouchableOpacity>
                                
                                <TouchableOpacity 
                                    style={[
                                        styles.checkboxRow,
                                        formData.localizacaoDor.antebraco && styles.checkboxRowSelected
                                    ]}
                                    onPress={() => setFormData({
                                        ...formData, 
                                        localizacaoDor: {
                                            ...formData.localizacaoDor,
                                            antebraco: !formData.localizacaoDor.antebraco
                                        }
                                    })}
                                >
                                    <Text style={[
                                        styles.checkboxText,
                                        formData.localizacaoDor.antebraco && styles.checkboxRowSelected
                                    ]}>
                                        {formData.localizacaoDor.antebraco ? '‚òë' : '‚òê'} Antebra√ßo
                                    </Text>
                                </TouchableOpacity>
                                
                                <TouchableOpacity 
                                    style={[
                                        styles.checkboxRow,
                                        formData.localizacaoDor.mao && styles.checkboxRowSelected
                                    ]}
                                    onPress={() => setFormData({
                                        ...formData, 
                                        localizacaoDor: {
                                            ...formData.localizacaoDor,
                                            mao: !formData.localizacaoDor.mao
                                        }
                                    })}
                                >
                                    <Text style={[
                                        styles.checkboxText,
                                        formData.localizacaoDor.mao && styles.checkboxTextSelected
                                    ]}>
                                        {formData.localizacaoDor.mao ? '‚òë' : '‚òê'} M√£o
                                    </Text>
                                </TouchableOpacity>
                                
                                <TouchableOpacity 
                                    style={[
                                        styles.checkboxRow,
                                        formData.localizacaoDor.torax && styles.checkboxRowSelected
                                    ]}
                                    onPress={() => setFormData({
                                        ...formData, 
                                        localizacaoDor: {
                                            ...formData.localizacaoDor,
                                            torax: !formData.localizacaoDor.torax
                                        }
                                    })}
                                >
                                    <Text style={[
                                        styles.checkboxText,
                                        formData.localizacaoDor.torax && styles.checkboxRowSelected
                                    ]}>
                                        {formData.localizacaoDor.torax ? '‚òë' : '‚òê'} T√≥rax
                                    </Text>
                                </TouchableOpacity>
                                
                                <TouchableOpacity 
                                    style={[
                                        styles.checkboxRow,
                                        formData.localizacaoDor.costas && styles.checkboxRowSelected
                                    ]}
                                    onPress={() => setFormData({
                                        ...formData, 
                                        localizacaoDor: {
                                            ...formData.localizacaoDor,
                                            costas: !formData.localizacaoDor.costas
                                        }
                                    })}
                                >
                                    <Text style={[
                                        styles.checkboxText,
                                        formData.localizacaoDor.costas && styles.checkboxRowSelected
                                    ]}>
                                        {formData.localizacaoDor.costas ? '‚òë' : '‚òê'} Costas
                                    </Text>
                                </TouchableOpacity>
                                
                                <TouchableOpacity 
                                    style={[
                                        styles.checkboxRow,
                                        formData.localizacaoDor.lombar && styles.checkboxRowSelected
                                    ]}
                                    onPress={() => setFormData({
                                        ...formData, 
                                        localizacaoDor: {
                                            ...formData.localizacaoDor,
                                            lombar: !formData.localizacaoDor.lombar
                                        }
                                    })}
                                >
                                    <Text style={[
                                        styles.checkboxText,
                                        formData.localizacaoDor.lombar && styles.checkboxRowSelected
                                    ]}>
                                        {formData.localizacaoDor.lombar ? '‚òë' : '‚òê'} Lombar
                                    </Text>
                                </TouchableOpacity>
                                
                                <TouchableOpacity 
                                    style={[
                                        styles.checkboxRow,
                                        formData.localizacaoDor.quadril && styles.checkboxRowSelected
                                    ]}
                                    onPress={() => setFormData({
                                        ...formData, 
                                        localizacaoDor: {
                                            ...formData.localizacaoDor,
                                            quadril: !formData.localizacaoDor.quadril
                                        }
                                    })}
                                >
                                    <Text style={[
                                        styles.checkboxText,
                                        formData.localizacaoDor.quadril && styles.checkboxRowSelected
                                    ]}>
                                        {formData.localizacaoDor.quadril ? '‚òë' : '‚òê'} Quadril
                                    </Text>
                                </TouchableOpacity>
                                
                                <TouchableOpacity 
                                    style={[
                                        styles.checkboxRow,
                                        formData.localizacaoDor.coxa && styles.checkboxRowSelected
                                    ]}
                                    onPress={() => setFormData({
                                        ...formData, 
                                        localizacaoDor: {
                                            ...formData.localizacaoDor,
                                            coxa: !formData.localizacaoDor.coxa
                                        }
                                    })}
                                >
                                    <Text style={[
                                        styles.checkboxText,
                                        formData.localizacaoDor.coxa && styles.checkboxRowSelected
                                    ]}>
                                        {formData.localizacaoDor.coxa ? '‚òë' : '‚òê'} Coxa
                                    </Text>
                                </TouchableOpacity>
                                
                                <TouchableOpacity 
                                    style={[
                                        styles.checkboxRow,
                                        formData.localizacaoDor.perna && styles.checkboxRowSelected
                                    ]}
                                    onPress={() => setFormData({
                                        ...formData, 
                                        localizacaoDor: {
                                            ...formData.localizacaoDor,
                                            perna: !formData.localizacaoDor.perna
                                        }
                                    })}
                                >
                                    <Text style={[
                                        styles.checkboxText,
                                        formData.localizacaoDor.perna && styles.checkboxRowSelected
                                    ]}>
                                        {formData.localizacaoDor.perna ? '‚òë' : '‚òê'} Perna
                                    </Text>
                                </TouchableOpacity>
                                
                                <TouchableOpacity 
                                    style={[
                                        styles.checkboxRow,
                                        formData.localizacaoDor.pe && styles.checkboxRowSelected
                                    ]}
                                    onPress={() => setFormData({
                                        ...formData, 
                                        localizacaoDor: {
                                            ...formData.localizacaoDor,
                                            pe: !formData.localizacaoDor.pe
                                        }
                                    })}
                                >
                                    <Text style={[
                                        styles.checkboxText,
                                        formData.localizacaoDor.pe && styles.checkboxRowSelected
                                    ]}>
                                        {formData.localizacaoDor.pe ? '‚òë' : '‚òê'} P√©
                                    </Text>
                                </TouchableOpacity>
                                
                                <TouchableOpacity 
                                    style={[
                                        styles.checkboxRow,
                                        formData.localizacaoDor.generalizada && styles.checkboxRowSelected
                                    ]}
                                    onPress={() => setFormData({
                                        ...formData, 
                                        localizacaoDor: {
                                            ...formData.localizacaoDor,
                                            generalizada: !formData.localizacaoDor.generalizada
                                        }
                                    })}
                                >
                                    <Text style={[
                                        styles.checkboxText,
                                        formData.localizacaoDor.generalizada && styles.checkboxRowSelected
                                    ]}>
                                        {formData.localizacaoDor.generalizada ? '‚òë' : '‚òê'} Generalizada
                                    </Text>
                                </TouchableOpacity>
                            </View>
                        </View>
                        
                        {/* Observa√ß√µes da Localiza√ß√£o */}
                        <View style={styles.formRow}>
                            <Text style={styles.formLabel}>Observa√ß√µes da Localiza√ß√£o:</Text>
                            <TextInput
                                style={[styles.textInput, { height: 80, textAlignVertical: 'top' }]}
                                value={formData.observacoesLocalizacao}
                                onChangeText={(text) => setFormData({...formData, observacoesLocalizacao: text})}
                                placeholder="Observa√ß√µes sobre a localiza√ß√£o da dor"
                                multiline
                            />
                        </View>
                        
                        {/* Status do Exame */}
                        <View style={styles.formRow}>
                            <Text style={styles.formLabel}>Status do Exame:</Text>
                            <View style={styles.statusContainer}>
                                <TouchableOpacity 
                                    style={[
                                        styles.statusButton,
                                        formData.statusExame === 'bom' && styles.statusButtonSelected
                                    ]}
                                    onPress={() => setFormData({...formData, statusExame: 'bom'})}
                                >
                                    <Text style={[
                                        styles.statusButtonText,
                                        formData.statusExame === 'bom' && styles.statusButtonTextSelected
                                    ]}>
                                        Bom (+1)
                                    </Text>
                                </TouchableOpacity>
                                
                                <TouchableOpacity 
                                    style={[
                                        styles.statusButton,
                                        formData.statusExame === 'atencao' && styles.statusButtonSelected
                                    ]}
                                    onPress={() => setFormData({...formData, statusExame: 'atencao'})}
                                >
                                    <Text style={[
                                        styles.statusButtonText,
                                        formData.statusExame === 'atencao' && styles.statusButtonTextSelected
                                    ]}>
                                        Aten√ß√£o (0)
                                    </Text>
                                </TouchableOpacity>
                                
                                <TouchableOpacity 
                                    style={[
                                        styles.statusButton,
                                        formData.statusExame === 'ruim' && styles.statusButtonSelected
                                    ]}
                                    onPress={() => setFormData({...formData, statusExame: 'ruim'})}
                                >
                                    <Text style={[
                                        styles.statusButtonText,
                                        formData.statusExame === 'ruim' && styles.statusButtonTextSelected
                                    ]}>
                                        Ruim (-1)
                                    </Text>
                                </TouchableOpacity>
                            </View>
                        </View>
                        
                        {/* Tipo de Dor */}
                        <View style={styles.formRow}>
                            <Text style={styles.formLabel}>Tipo de Dor:</Text>
                            <View style={styles.checkboxContainer}>
                                <TouchableOpacity 
                                    style={[
                                        styles.checkboxRow,
                                        formData.tipoDor.aguda && styles.checkboxRowSelected
                                    ]}
                                    onPress={() => setFormData({
                                        ...formData, 
                                        tipoDor: {
                                            ...formData.tipoDor,
                                            aguda: !formData.tipoDor.aguda
                                        }
                                    })}
                                >
                                    <Text style={[
                                        styles.checkboxText,
                                        formData.tipoDor.aguda && styles.checkboxTextSelected
                                    ]}>
                                        {formData.tipoDor.aguda ? '‚òë' : '‚òê'} Aguda
                                    </Text>
                                </TouchableOpacity>
                                
                                <TouchableOpacity 
                                    style={[
                                        styles.checkboxRow,
                                        formData.tipoDor.cronica && styles.checkboxRowSelected
                                    ]}
                                    onPress={() => setFormData({
                                        ...formData, 
                                        tipoDor: {
                                            ...formData.tipoDor,
                                            cronica: !formData.tipoDor.cronica
                                        }
                                    })}
                                >
                                    <Text style={[
                                        styles.checkboxText,
                                        formData.tipoDor.cronica && styles.checkboxTextSelected
                                    ]}>
                                        {formData.tipoDor.cronica ? '‚òë' : '‚òê'} Cr√¥nica
                                    </Text>
                                </TouchableOpacity>
                                
                                <TouchableOpacity 
                                    style={[
                                        styles.checkboxRow,
                                        formData.tipoDor.irradiada && styles.checkboxRowSelected
                                    ]}
                                    onPress={() => setFormData({
                                        ...formData, 
                                        tipoDor: {
                                            ...formData.tipoDor,
                                            irradiada: !formData.tipoDor.irradiada
                                        }
                                    })}
                                >
                                    <Text style={[
                                        styles.checkboxText,
                                        formData.tipoDor.irradiada && styles.checkboxTextSelected
                                    ]}>
                                        {formData.tipoDor.irradiada ? '‚òë' : '‚òê'} Irradiada
                                    </Text>
                                </TouchableOpacity>
                                
                                <TouchableOpacity 
                                    style={[
                                        styles.checkboxRow,
                                        formData.tipoDor.pontada && styles.checkboxRowSelected
                                    ]}
                                    onPress={() => setFormData({
                                        ...formData, 
                                        tipoDor: {
                                            ...formData.tipoDor,
                                            pontada: !formData.tipoDor.pontada
                                        }
                                    })}
                                >
                                    <Text style={[
                                        styles.checkboxText,
                                        formData.tipoDor.pontada && styles.checkboxTextSelected
                                    ]}>
                                        {formData.tipoDor.pontada ? '‚òë' : '‚òê'} Pontada
                                    </Text>
                                </TouchableOpacity>
                                
                                <TouchableOpacity 
                                    style={[
                                        styles.checkboxRow,
                                        formData.tipoDor.queimacao && styles.checkboxRowSelected
                                    ]}
                                    onPress={() => setFormData({
                                        ...formData, 
                                        tipoDor: {
                                            ...formData.tipoDor,
                                            queimacao: !formData.tipoDor.queimacao
                                        }
                                    })}
                                >
                                    <Text style={[
                                        styles.checkboxText,
                                        formData.tipoDor.queimacao && styles.checkboxTextSelected
                                    ]}>
                                        {formData.tipoDor.queimacao ? '‚òë' : '‚òê'} Queima√ß√£o
                                    </Text>
                                </TouchableOpacity>
                                
                                <TouchableOpacity 
                                    style={[
                                        styles.checkboxRow,
                                        formData.tipoDor.pressao && styles.checkboxRowSelected
                                    ]}
                                    onPress={() => setFormData({
                                        ...formData, 
                                        tipoDor: {
                                            ...formData.tipoDor,
                                            pressao: !formData.tipoDor.pressao
                                        }
                                    })}
                                >
                                    <Text style={[
                                        styles.checkboxText,
                                        formData.tipoDor.pressao && styles.checkboxTextSelected
                                    ]}>
                                        {formData.tipoDor.pressao ? '‚òë' : '‚òê'} Press√£o
                                    </Text>
                                </TouchableOpacity>
                                
                                <TouchableOpacity 
                                    style={[
                                        styles.checkboxRow,
                                        formData.tipoDor.latejante && styles.checkboxRowSelected
                                    ]}
                                    onPress={() => setFormData({
                                        ...formData, 
                                        tipoDor: {
                                            ...formData.tipoDor,
                                            latejante: !formData.tipoDor.latejante
                                        }
                                    })}
                                >
                                    <Text style={[
                                        styles.checkboxText,
                                        formData.tipoDor.latejante && styles.checkboxTextSelected
                                    ]}>
                                        {formData.tipoDor.latejante ? '‚òë' : '‚òê'} Latejante
                                    </Text>
                                </TouchableOpacity>
                                
                                <TouchableOpacity 
                                    style={[
                                        styles.checkboxRow,
                                        formData.tipoDor.caimbra && styles.checkboxRowSelected
                                    ]}
                                    onPress={() => setFormData({
                                        ...formData, 
                                        tipoDor: {
                                            ...formData.tipoDor,
                                            caimbra: !formData.tipoDor.caimbra
                                        }
                                    })}
                                >
                                    <Text style={[
                                        styles.checkboxText,
                                        formData.tipoDor.caimbra && styles.checkboxTextSelected
                                    ]}>
                                        {formData.tipoDor.caimbra ? '‚òë' : '‚òê'} C√¢imbra
                                    </Text>
                                </TouchableOpacity>
                                
                                <TouchableOpacity 
                                    style={[
                                        styles.checkboxRow,
                                        formData.tipoDor.formigamento && styles.checkboxRowSelected
                                    ]}
                                    onPress={() => setFormData({
                                        ...formData, 
                                        tipoDor: {
                                            ...formData.tipoDor,
                                            formigamento: !formData.tipoDor.formigamento
                                        }
                                    })}
                                >
                                    <Text style={[
                                        styles.checkboxText,
                                        formData.tipoDor.formigamento && styles.checkboxTextSelected
                                    ]}>
                                        {formData.tipoDor.formigamento ? '‚òë' : '‚òê'} Formigamento
                                    </Text>
                                </TouchableOpacity>
                                
                                <TouchableOpacity 
                                    style={[
                                        styles.checkboxRow,
                                        formData.tipoDor.dormencia && styles.checkboxRowSelected
                                    ]}
                                    onPress={() => setFormData({
                                        ...formData, 
                                        tipoDor: {
                                            ...formData.tipoDor,
                                            dormencia: !formData.tipoDor.dormencia
                                        }
                                    })}
                                >
                                    <Text style={[
                                        styles.checkboxText,
                                        formData.tipoDor.dormencia && styles.checkboxTextSelected
                                    ]}>
                                        {formData.tipoDor.dormencia ? '‚òë' : '‚òê'} Dorm√™ncia
                                    </Text>
                                </TouchableOpacity>
                                
                                <TouchableOpacity 
                                    style={[
                                        styles.checkboxRow,
                                        formData.tipoDor.eletrica && styles.checkboxRowSelected
                                    ]}
                                    onPress={() => setFormData({
                                        ...formData, 
                                        tipoDor: {
                                            ...formData.tipoDor,
                                            eletrica: !formData.tipoDor.eletrica
                                        }
                                    })}
                                >
                                    <Text style={[
                                        styles.checkboxText,
                                        formData.tipoDor.eletrica && styles.checkboxTextSelected
                                    ]}>
                                        {formData.tipoDor.eletrica ? '‚òë' : '‚òê'} El√©trica
                                    </Text>
                                </TouchableOpacity>
                            </View>
                        </View>
                        
                        {/* Observa√ß√µes do Tipo de Dor */}
                        <View style={styles.formRow}>
                            <Text style={styles.formLabel}>Observa√ß√µes do Tipo de Dor:</Text>
                            <TextInput
                                style={[styles.textInput, { height: 80, textAlignVertical: 'top' }]}
                                value={formData.observacoesTipoDor}
                                onChangeText={(text) => setFormData({...formData, observacoesTipoDor: text})}
                                placeholder="Observa√ß√µes sobre o tipo de dor"
                                multiline
                            />
                        </View>
                        
                        {/* Intensidade da Dor */}
                        <View style={styles.formRow}>
                            <Text style={styles.formLabel}>Intensidade da Dor:</Text>
                            <View style={styles.checkboxContainer}>
                                <TouchableOpacity 
                                    style={[
                                        styles.checkboxRow,
                                        formData.intensidadeDor.leve && styles.checkboxRowSelected
                                    ]}
                                    onPress={() => setFormData({
                                        ...formData, 
                                        intensidadeDor: {
                                            ...formData.intensidadeDor,
                                            leve: !formData.intensidadeDor.leve
                                        }
                                    })}
                                >
                                    <Text style={[
                                        styles.checkboxText,
                                        formData.intensidadeDor.leve && styles.checkboxTextSelected
                                    ]}>
                                        {formData.intensidadeDor.leve ? '‚òë' : '‚òê'} Leve
                                    </Text>
                                </TouchableOpacity>
                                
                                <TouchableOpacity 
                                    style={[
                                        styles.checkboxRow,
                                        formData.intensidadeDor.moderada && styles.checkboxRowSelected
                                    ]}
                                    onPress={() => setFormData({
                                        ...formData, 
                                        intensidadeDor: {
                                            ...formData.intensidadeDor,
                                            moderada: !formData.intensidadeDor.moderada
                                        }
                                    })}
                                >
                                    <Text style={[
                                        styles.checkboxText,
                                        formData.intensidadeDor.moderada && styles.checkboxTextSelected
                                    ]}>
                                        {formData.intensidadeDor.moderada ? '‚òë' : '‚òê'} Moderada
                                    </Text>
                                </TouchableOpacity>
                                
                                <TouchableOpacity 
                                    style={[
                                        styles.checkboxRow,
                                        formData.intensidadeDor.intensa && styles.checkboxRowSelected
                                    ]}
                                    onPress={() => setFormData({
                                        ...formData, 
                                        intensidadeDor: {
                                            ...formData.intensidadeDor,
                                            intensa: !formData.intensidadeDor.intensa
                                        }
                                    })}
                                >
                                    <Text style={[
                                        styles.checkboxText,
                                        formData.intensidadeDor.intensa && styles.checkboxTextSelected
                                    ]}>
                                        {formData.intensidadeDor.intensa ? '‚òë' : '‚òê'} Intensa
                                    </Text>
                                </TouchableOpacity>
                                
                                <TouchableOpacity 
                                    style={[
                                        styles.checkboxRow,
                                        formData.intensidadeDor.insuportavel && styles.checkboxRowSelected
                                    ]}
                                    onPress={() => setFormData({
                                        ...formData, 
                                        intensidadeDor: {
                                            ...formData.intensidadeDor,
                                            insuportavel: !formData.intensidadeDor.insuportavel
                                        }
                                    })}
                                >
                                    <Text style={[
                                        styles.checkboxText,
                                        formData.intensidadeDor.insuportavel && styles.checkboxTextSelected
                                    ]}>
                                        {formData.intensidadeDor.insuportavel ? '‚òë' : '‚òê'} Insuport√°vel
                                    </Text>
                                </TouchableOpacity>
                            </View>
                        </View>
                        
                        {/* Observa√ß√µes da Intensidade */}
                        <View style={styles.formRow}>
                            <Text style={styles.formLabel}>Observa√ß√µes da Intensidade:</Text>
                            <TextInput
                                style={[styles.textInput, { height: 80, textAlignVertical: 'top' }]}
                                value={formData.observacoesIntensidade}
                                onChangeText={(text) => setFormData({...formData, observacoesIntensidade: text})}
                                placeholder="Observa√ß√µes sobre a intensidade da dor"
                                multiline
                            />
                        </View>
                        
                        {/* Frequ√™ncia e Dura√ß√£o */}
                        <View style={styles.formRow}>
                            <Text style={styles.formLabel}>Frequ√™ncia e Dura√ß√£o:</Text>
                            <View style={styles.checkboxContainer}>
                                <TouchableOpacity 
                                    style={[
                                        styles.checkboxRow,
                                        formData.frequenciaDuracao.constante && styles.checkboxRowSelected
                                    ]}
                                    onPress={() => setFormData({
                                        ...formData, 
                                        frequenciaDuracao: {
                                            ...formData.frequenciaDuracao,
                                            constante: !formData.frequenciaDuracao.constante
                                        }
                                    })}
                                >
                                    <Text style={[
                                        styles.checkboxText,
                                        formData.frequenciaDuracao.constante && styles.checkboxTextSelected
                                    ]}>
                                        {formData.frequenciaDuracao.constante ? '‚òë' : '‚òê'} Constante
                                    </Text>
                                </TouchableOpacity>
                                
                                <TouchableOpacity 
                                    style={[
                                        styles.checkboxRow,
                                        formData.frequenciaDuracao.intermitente && styles.checkboxRowSelected
                                    ]}
                                    onPress={() => setFormData({
                                        ...formData, 
                                        frequenciaDuracao: {
                                            ...formData.frequenciaDuracao,
                                            intermitente: !formData.frequenciaDuracao.intermitente
                                        }
                                    })}
                                >
                                    <Text style={[
                                        styles.checkboxText,
                                        formData.frequenciaDuracao.intermitente && styles.checkboxTextSelected
                                    ]}>
                                        {formData.frequenciaDuracao.intermitente ? '‚òë' : '‚òê'} Intermitente
                                    </Text>
                                </TouchableOpacity>
                                
                                <TouchableOpacity 
                                    style={[
                                        styles.checkboxRow,
                                        formData.frequenciaDuracao.matinal && styles.checkboxRowSelected
                                    ]}
                                    onPress={() => setFormData({
                                        ...formData, 
                                        frequenciaDuracao: {
                                            ...formData.frequenciaDuracao,
                                            matinal: !formData.frequenciaDuracao.matinal
                                        }
                                    })}
                                >
                                    <Text style={[
                                        styles.checkboxText,
                                        formData.frequenciaDuracao.matinal && styles.checkboxTextSelected
                                    ]}>
                                        {formData.frequenciaDuracao.matinal ? '‚òë' : '‚òê'} Matinal
                                    </Text>
                                </TouchableOpacity>
                                
                                <TouchableOpacity 
                                    style={[
                                        styles.checkboxRow,
                                        formData.frequenciaDuracao.vespertina && styles.checkboxRowSelected
                                    ]}
                                    onPress={() => setFormData({
                                        ...formData, 
                                        frequenciaDuracao: {
                                            ...formData.frequenciaDuracao,
                                            vespertina: !formData.frequenciaDuracao.vespertina
                                        }
                                    })}
                                >
                                    <Text style={[
                                        styles.checkboxText,
                                        formData.frequenciaDuracao.vespertina && styles.checkboxTextSelected
                                    ]}>
                                        {formData.frequenciaDuracao.vespertina ? '‚òë' : '‚òê'} Vespertina
                                    </Text>
                                </TouchableOpacity>
                                
                                <TouchableOpacity 
                                    style={[
                                        styles.checkboxRow,
                                        formData.frequenciaDuracao.noturna && styles.checkboxRowSelected
                                    ]}
                                    onPress={() => setFormData({
                                        ...formData, 
                                        frequenciaDuracao: {
                                            ...formData.frequenciaDuracao,
                                            noturna: !formData.frequenciaDuracao.noturna
                                        }
                                    })}
                                >
                                    <Text style={[
                                        styles.checkboxText,
                                        formData.frequenciaDuracao.noturna && styles.checkboxTextSelected
                                    ]}>
                                        {formData.frequenciaDuracao.noturna ? '‚òë' : '‚òê'} Noturna
                                    </Text>
                                </TouchableOpacity>
                                
                                <TouchableOpacity 
                                    style={[
                                        styles.checkboxRow,
                                        formData.frequenciaDuracao.aoMovimento && styles.checkboxRowSelected
                                    ]}
                                    onPress={() => setFormData({
                                        ...formData, 
                                        frequenciaDuracao: {
                                            ...formData.frequenciaDuracao,
                                            aoMovimento: !formData.frequenciaDuracao.aoMovimento
                                        }
                                    })}
                                >
                                    <Text style={[
                                        styles.checkboxText,
                                        formData.frequenciaDuracao.aoMovimento && styles.checkboxRowSelected
                                    ]}>
                                        {formData.frequenciaDuracao.aoMovimento ? '‚òë' : '‚òê'} Ao movimento
                                    </Text>
                                </TouchableOpacity>
                                
                                <TouchableOpacity 
                                    style={[
                                        styles.checkboxRow,
                                        formData.frequenciaDuracao.emRepouso && styles.checkboxRowSelected
                                    ]}
                                    onPress={() => setFormData({
                                        ...formData, 
                                        frequenciaDuracao: {
                                            ...formData.frequenciaDuracao,
                                            emRepouso: !formData.frequenciaDuracao.emRepouso
                                        }
                                    })}
                                >
                                    <Text style={[
                                        styles.checkboxText,
                                        formData.frequenciaDuracao.emRepouso && styles.checkboxTextSelected
                                    ]}>
                                        {formData.frequenciaDuracao.emRepouso ? '‚òë' : '‚òê'} Em repouso
                                    </Text>
                                </TouchableOpacity>
                            </View>
                        </View>
                        
                        {/* Observa√ß√µes da Frequ√™ncia */}
                        <View style={styles.formRow}>
                            <Text style={styles.formLabel}>Observa√ß√µes da Frequ√™ncia:</Text>
                            <TextInput
                                style={[styles.textInput, { height: 80, textAlignVertical: 'top' }]}
                                value={formData.observacoesFrequencia}
                                onChangeText={(text) => setFormData({...formData, observacoesFrequencia: text})}
                                placeholder="Observa√ß√µes sobre a frequ√™ncia e dura√ß√£o da dor"
                                multiline
                            />
                        </View>
                        
                        {/* Irradia√ß√£o da Dor */}
                        <View style={styles.formRow}>
                            <Text style={styles.formLabel}>Irradia√ß√£o da Dor:</Text>
                            <View style={styles.checkboxContainer}>
                                <TouchableOpacity 
                                    style={[
                                        styles.checkboxRow,
                                        formData.irradiacaoDor.nenhuma && styles.checkboxRowSelected
                                    ]}
                                    onPress={() => setFormData({
                                        ...formData, 
                                        irradiacaoDor: {
                                            ...formData.irradiacaoDor,
                                            nenhuma: !formData.irradiacaoDor.nenhuma
                                        }
                                    })}
                                >
                                    <Text style={[
                                        styles.checkboxText,
                                        formData.irradiacaoDor.nenhuma && styles.checkboxTextSelected
                                    ]}>
                                        {formData.irradiacaoDor.nenhuma ? '‚òë' : '‚òê'} Nenhuma
                                    </Text>
                                </TouchableOpacity>
                                
                                <TouchableOpacity 
                                    style={[
                                        styles.checkboxRow,
                                        formData.irradiacaoDor.membroSuperior && styles.checkboxRowSelected
                                    ]}
                                    onPress={() => setFormData({
                                        ...formData, 
                                        irradiacaoDor: {
                                            ...formData.irradiacaoDor,
                                            membroSuperior: !formData.irradiacaoDor.membroSuperior
                                        }
                                    })}
                                >
                                    <Text style={[
                                        styles.checkboxText,
                                        formData.irradiacaoDor.membroSuperior && styles.checkboxTextSelected
                                    ]}>
                                        {formData.irradiacaoDor.membroSuperior ? '‚òë' : '‚òê'} Membro superior
                                    </Text>
                                </TouchableOpacity>
                                
                                <TouchableOpacity 
                                    style={[
                                        styles.checkboxRow,
                                        formData.irradiacaoDor.membroInferior && styles.checkboxRowSelected
                                    ]}
                                    onPress={() => setFormData({
                                        ...formData, 
                                        irradiacaoDor: {
                                            ...formData.irradiacaoDor,
                                            membroInferior: !formData.irradiacaoDor.membroInferior
                                        }
                                    })}
                                >
                                    <Text style={[
                                        styles.checkboxText,
                                        formData.irradiacaoDor.membroInferior && styles.checkboxTextSelected
                                    ]}>
                                        {formData.irradiacaoDor.membroInferior ? '‚òë' : '‚òê'} Membro inferior
                                    </Text>
                                </TouchableOpacity>
                                
                                <TouchableOpacity 
                                    style={[
                                        styles.checkboxRow,
                                        formData.irradiacaoDor.cabeca && styles.checkboxRowSelected
                                    ]}
                                    onPress={() => setFormData({
                                        ...formData, 
                                        irradiacaoDor: {
                                            ...formData.irradiacaoDor,
                                            cabeca: !formData.irradiacaoDor.cabeca
                                        }
                                    })}
                                >
                                    <Text style={[
                                        styles.checkboxText,
                                        formData.irradiacaoDor.cabeca && styles.checkboxTextSelected
                                    ]}>
                                        {formData.irradiacaoDor.cabeca ? '‚òë' : '‚òê'} Cabe√ßa
                                    </Text>
                                </TouchableOpacity>
                                
                                <TouchableOpacity 
                                    style={[
                                        styles.checkboxRow,
                                        formData.irradiacaoDor.torax && styles.checkboxRowSelected
                                    ]}
                                    onPress={() => setFormData({
                                        ...formData, 
                                        irradiacaoDor: {
                                            ...formData.irradiacaoDor,
                                            torax: !formData.irradiacaoDor.torax
                                        }
                                    })}
                                >
                                    <Text style={[
                                        styles.checkboxText,
                                        formData.irradiacaoDor.torax && styles.checkboxTextSelected
                                    ]}>
                                        {formData.irradiacaoDor.torax ? '‚òë' : '‚òê'} T√≥rax
                                    </Text>
                                </TouchableOpacity>
                                
                                <TouchableOpacity 
                                    style={[
                                        styles.checkboxRow,
                                        formData.irradiacaoDor.costas && styles.checkboxRowSelected
                                    ]}
                                    onPress={() => setFormData({
                                        ...formData, 
                                        irradiacaoDor: {
                                            ...formData.irradiacaoDor,
                                            costas: !formData.irradiacaoDor.costas
                                        }
                                    })}
                                >
                                    <Text style={[
                                        styles.checkboxText,
                                        formData.irradiacaoDor.costas && styles.checkboxTextSelected
                                    ]}>
                                        {formData.irradiacaoDor.costas ? '‚òë' : '‚òê'} Costas
                                    </Text>
                                </TouchableOpacity>
                            </View>
                        </View>
                        
                        {/* Observa√ß√µes da Irradia√ß√£o */}
                        <View style={styles.formRow}>
                            <Text style={styles.formLabel}>Observa√ß√µes da Irradia√ß√£o:</Text>
                            <TextInput
                                style={[styles.textInput, { height: 80, textAlignVertical: 'top' }]}
                                value={formData.observacoesIrradiacao}
                                onChangeText={(text) => setFormData({...formData, observacoesIrradiacao: text})}
                                placeholder="Observa√ß√µes sobre a irradia√ß√£o da dor"
                                multiline
                            />
                        </View>
                        
                        {/* Escala da Dor */}
                        <View style={styles.formRow}>
                            <Text style={styles.formLabel}>Escala da Dor:</Text>
                            <TextInput
                                style={styles.textInput}
                                value={formData.escalaDor}
                                onChangeText={(text) => setFormData({...formData, escalaDor: text})}
                                placeholder="Escala utilizada para avalia√ß√£o"
                            />
                        </View>
                        
                        {/* Observa√ß√µes Gerais */}
                        <View style={styles.formRow}>
                            <Text style={styles.formLabel}>Observa√ß√µes Gerais:</Text>
                            <TextInput
                                style={[styles.textInput, { height: 80, textAlignVertical: 'top' }]}
                                value={formData.observacoesDor}
                                onChangeText={(text) => setFormData({...formData, observacoesDor: text})}
                                placeholder="Observa√ß√µes gerais sobre a dor"
                                multiline
                            />
                        </View>
                    </View>
                );
                
            case 'sinaisVitais':
                return (
                    <View style={styles.formContent}>
                        <View style={styles.formRow}>
                            <Text style={styles.formLabel}>Press√£o Arterial:</Text>
                            <TextInput
                                style={styles.textInput}
                                value={formData.pressaoArterial}
                                onChangeText={(text) => setFormData({...formData, pressaoArterial: text})}
                                placeholder="Ex: 120/80 mmHg"
                            />
                        </View>
                        
                        <View style={styles.formRow}>
                            <Text style={styles.formLabel}>Frequ√™ncia Card√≠aca:</Text>
                            <TextInput
                                style={styles.textInput}
                                value={formData.frequenciaCardiaca}
                                onChangeText={(text) => setFormData({...formData, frequenciaCardiaca: text})}
                                placeholder="Ex: 80 bpm"
                                keyboardType="numeric"
                            />
                        </View>
                        
                        <View style={styles.formRow}>
                            <Text style={styles.formLabel}>Frequ√™ncia Respirat√≥ria:</Text>
                            <TextInput
                                style={styles.textInput}
                                value={formData.frequenciaRespiratoria}
                                onChangeText={(text) => setFormData({...formData, frequenciaRespiratoria: text})}
                                placeholder="Ex: 16 irpm"
                                keyboardType="numeric"
                            />
                        </View>
                        
                        <View style={styles.formRow}>
                            <Text style={styles.formLabel}>Temperatura:</Text>
                            <TextInput
                                style={styles.textInput}
                                value={formData.temperatura}
                                onChangeText={(text) => setFormData({...formData, temperatura: text})}
                                placeholder="Ex: 36.5¬∞C"
                                keyboardType="numeric"
                            />
                        </View>
                        
                        <View style={styles.formRow}>
                            <Text style={styles.formLabel}>Satura√ß√£o de Oxig√™nio:</Text>
                            <TextInput
                                style={styles.textInput}
                                value={formData.saturacaoOxigenio}
                                onChangeText={(text) => setFormData({...formData, saturacaoOxigenio: text})}
                                placeholder="Ex: 98%"
                                keyboardType="numeric"
                            />
                        </View>
                        
                        <View style={styles.formRow}>
                            <Text style={styles.formLabel}>Observa√ß√µes:</Text>
                            <TextInput
                                style={[styles.textInput, { height: 80, textAlignVertical: 'top' }]}
                                value={formData.observacoesSinaisVitais}
                                onChangeText={(text) => setFormData({...formData, observacoesSinaisVitais: text})}
                                placeholder="Observa√ß√µes sobre sinais vitais"
                                multiline
                            />
                        </View>
                    </View>
                );
                
            case 'examesFisioterapeuticos':
                return (
                    <View style={styles.formContent}>
                        <View style={styles.formRow}>
                            <Text style={styles.formLabel}>Inspe√ß√£o Postural:</Text>
                            <TextInput
                                style={[styles.textInput, { height: 80, textAlignVertical: 'top' }]}
                                value={formData.inspecaoPostural}
                                onChangeText={(text) => setFormData({...formData, inspecaoPostural: text})}
                                placeholder="Descreva a inspe√ß√£o postural"
                                multiline
                            />
                        </View>
                        
                        <View style={styles.formRow}>
                            <Text style={styles.formLabel}>Palpa√ß√£o:</Text>
                            <TextInput
                                style={[styles.textInput, { height: 80, textAlignVertical: 'top' }]}
                                value={formData.palpa√ß√£o}
                                onChangeText={(text) => setFormData({...formData, palpa√ß√£o: text})}
                                placeholder="Descreva a palpa√ß√£o realizada"
                                multiline
                            />
                        </View>
                        
                        <View style={styles.formRow}>
                            <Text style={styles.formLabel}>Amplitude de Movimento:</Text>
                            <TextInput
                                style={[styles.textInput, { height: 80, textAlignVertical: 'top' }]}
                                value={formData.amplitudeMovimento}
                                onChangeText={(text) => setFormData({...formData, amplitudeMovimento: text})}
                                placeholder="Descreva a amplitude de movimento"
                                multiline
                            />
                        </View>
                        
                        <View style={styles.formRow}>
                            <Text style={styles.formLabel}>For√ßa Muscular:</Text>
                            <TextInput
                                style={styles.textInput}
                                value={formData.forcaMuscular}
                                onChangeText={(text) => setFormData({...formData, forcaMuscular: text})}
                                placeholder="Avalia√ß√£o da for√ßa muscular"
                            />
                        </View>
                        
                        <View style={styles.formRow}>
                            <Text style={styles.formLabel}>T√¥nus Muscular:</Text>
                            <TextInput
                                style={styles.textInput}
                                value={formData.tonusMuscular}
                                onChangeText={(text) => setFormData({...formData, tonusMuscular: text})}
                                placeholder="Avalia√ß√£o do t√¥nus muscular"
                            />
                        </View>
                        
                        <View style={styles.formRow}>
                            <Text style={styles.formLabel}>Coordena√ß√£o:</Text>
                            <TextInput
                                style={styles.textInput}
                                value={formData.coordenacao}
                                onChangeText={(text) => setFormData({...formData, coordenacao: text})}
                                placeholder="Avalia√ß√£o da coordena√ß√£o"
                            />
                        </View>
                        
                        <View style={styles.formRow}>
                            <Text style={styles.formLabel}>Equil√≠brio Est√°tico:</Text>
                            <TextInput
                                style={styles.textInput}
                                value={formData.equilibrioEstatico}
                                onChangeText={(text) => setFormData({...formData, equilibrioEstatico: text})}
                                placeholder="Avalia√ß√£o do equil√≠brio est√°tico"
                            />
                        </View>
                        
                        <View style={styles.formRow}>
                            <Text style={styles.formLabel}>Equil√≠brio Din√¢mico:</Text>
                            <TextInput
                                style={styles.textInput}
                                value={formData.equilibrioDinamico}
                                onChangeText={(text) => setFormData({...formData, equilibrioDinamico: text})}
                                placeholder="Avalia√ß√£o do equil√≠brio din√¢mico"
                            />
                        </View>
                        
                        <View style={styles.formRow}>
                            <Text style={styles.formLabel}>Reflexos:</Text>
                            <TextInput
                                style={styles.textInput}
                                value={formData.reflexos}
                                onChangeText={(text) => setFormData({...formData, reflexos: text})}
                                placeholder="Avalia√ß√£o dos reflexos"
                            />
                        </View>
                        
                        <View style={styles.formRow}>
                            <Text style={styles.formLabel}>Reflexos Patol√≥gicos:</Text>
                            <TextInput
                                style={styles.textInput}
                                value={formData.reflexosPatologicos}
                                onChangeText={(text) => setFormData({...formData, reflexosPatologicos: text})}
                                placeholder="Presen√ßa de reflexos patol√≥gicos"
                            />
                        </View>
                        
                        <View style={styles.formRow}>
                            <Text style={styles.formLabel}>Manobras Deficit√°rias:</Text>
                            <TextInput
                                style={styles.textInput}
                                value={formData.manobrasDeficitarias}
                                onChangeText={(text) => setFormData({...formData, manobrasDeficitarias: text})}
                                placeholder="Manobras deficit√°rias realizadas"
                            />
                        </View>
                        
                        <View style={styles.formRow}>
                            <Text style={styles.formLabel}>Padr√£o de Marcha:</Text>
                            <TextInput
                                style={styles.textInput}
                                value={formData.padraoMarcha}
                                onChangeText={(text) => setFormData({...formData, padraoMarcha: text})}
                                placeholder="Padr√£o de marcha observado"
                            />
                        </View>
                        
                        <View style={styles.formRow}>
                            <Text style={styles.formLabel}>Sensibilidade Superficial:</Text>
                            <TextInput
                                style={styles.textInput}
                                value={formData.sensibilidadeSuperficial}
                                onChangeText={(text) => setFormData({...formData, sensibilidadeSuperficial: text})}
                                placeholder="Avalia√ß√£o da sensibilidade superficial"
                            />
                        </View>
                        
                        <View style={styles.formRow}>
                            <Text style={styles.formLabel}>Sensibilidade Profunda:</Text>
                            <TextInput
                                style={styles.textInput}
                                value={formData.sensibilidadeProfunda}
                                onChangeText={(text) => setFormData({...formData, sensibilidadeProfunda: text})}
                                placeholder="Avalia√ß√£o da sensibilidade profunda"
                            />
                        </View>
                        
                        <View style={styles.formRow}>
                            <Text style={styles.formLabel}>Observa√ß√µes:</Text>
                            <TextInput
                                style={[styles.textInput, { height: 80, textAlignVertical: 'top' }]}
                                value={formData.observacoesExames}
                                onChangeText={(text) => setFormData({...formData, observacoesExames: text})}
                                placeholder="Observa√ß√µes sobre os exames fisioterap√™uticos"
                                multiline
                            />
                        </View>
                    </View>
                );
                
            case 'avaliacaoRespiratoria':
                return (
                    <View style={styles.formContent}>
                        <View style={styles.formRow}>
                            <Text style={styles.formLabel}>Padr√£o Respirat√≥rio:</Text>
                            <TextInput
                                style={styles.textInput}
                                value={formData.padraoRespiratorio}
                                onChangeText={(text) => setFormData({...formData, padraoRespiratorio: text})}
                                placeholder="Padr√£o respirat√≥rio observado"
                            />
                        </View>
                        
                        <View style={styles.formRow}>
                            <Text style={styles.formLabel}>Expansibilidade Tor√°cica:</Text>
                            <TextInput
                                style={styles.textInput}
                                value={formData.expansibilidadeToracica}
                                onChangeText={(text) => setFormData({...formData, expansibilidadeToracica: text})}
                                placeholder="Avalia√ß√£o da expansibilidade tor√°cica"
                            />
                        </View>
                        
                        <View style={styles.formRow}>
                            <Text style={styles.formLabel}>Ausculta Pulmonar:</Text>
                            <TextInput
                                style={[styles.textInput, { height: 80, textAlignVertical: 'top' }]}
                                value={formData.auscultaPulmonar}
                                onChangeText={(text) => setFormData({...formData, auscultaPulmonar: text})}
                                placeholder="Descreva a ausculta pulmonar"
                                multiline
                            />
                        </View>
                        
                        <View style={styles.formRow}>
                            <Text style={styles.formLabel}>Tosse:</Text>
                            <TextInput
                                style={styles.textInput}
                                value={formData.tosse}
                                onChangeText={(text) => setFormData({...formData, tosse: text})}
                                placeholder="Caracter√≠sticas da tosse"
                            />
                        </View>
                        
                        <View style={styles.formRow}>
                            <Text style={styles.formLabel}>Expectora√ß√£o:</Text>
                            <TextInput
                                style={styles.textInput}
                                value={formData.expectoracao}
                                onChangeText={(text) => setFormData({...formData, expectoracao: text})}
                                placeholder="Caracter√≠sticas da expectora√ß√£o"
                            />
                        </View>
                        
                        <View style={styles.formRow}>
                            <Text style={styles.formLabel}>Dispneia:</Text>
                            <TextInput
                                style={styles.textInput}
                                value={formData.dispneia}
                                onChangeText={(text) => setFormData({...formData, dispneia: text})}
                                placeholder="Presen√ßa e caracter√≠sticas da dispneia"
                            />
                        </View>
                        
                        <View style={styles.formRow}>
                            <Text style={styles.formLabel}>Observa√ß√µes:</Text>
                            <TextInput
                                style={[styles.textInput, { height: 80, textAlignVertical: 'top' }]}
                                value={formData.observacoesRespiratorias}
                                onChangeText={(text) => setFormData({...formData, observacoesRespiratorias: text})}
                                placeholder="Observa√ß√µes sobre avalia√ß√£o respirat√≥ria"
                                multiline
                            />
                        </View>
                    </View>
                );
                
            case 'avaliacaoSistemas':
                return (
                    <View style={styles.formContent}>
                        <View style={styles.formRow}>
                            <Text style={styles.formLabel}>Sistema Respirat√≥rio:</Text>
                            <TextInput
                                style={[styles.textInput, { height: 80, textAlignVertical: 'top' }]}
                                value={formData.sistemaRespiratorio}
                                onChangeText={(text) => setFormData({...formData, sistemaRespiratorio: text})}
                                placeholder="Avalia√ß√£o do sistema respirat√≥rio"
                                multiline
                            />
                        </View>
                        
                        <View style={styles.formRow}>
                            <Text style={styles.formLabel}>Sistema Cardiovascular:</Text>
                            <TextInput
                                style={[styles.textInput, { height: 80, textAlignVertical: 'top' }]}
                                value={formData.sistemaCardiovascular}
                                onChangeText={(text) => setFormData({...formData, sistemaCardiovascular: text})}
                                placeholder="Avalia√ß√£o do sistema cardiovascular"
                                multiline
                            />
                        </View>
                        
                        <View style={styles.formRow}>
                            <Text style={styles.formLabel}>Sistema Gastrointestinal:</Text>
                            <TextInput
                                style={[styles.textInput, { height: 80, textAlignVertical: 'top' }]}
                                value={formData.sistemaGastrointestinal}
                                onChangeText={(text) => setFormData({...formData, sistemaGastrointestinal: text})}
                                placeholder="Avalia√ß√£o do sistema gastrointestinal"
                                multiline
                            />
                        </View>
                        
                        <View style={styles.formRow}>
                            <Text style={styles.formLabel}>Sistema Neurol√≥gico:</Text>
                            <TextInput
                                style={[styles.textInput, { height: 80, textAlignVertical: 'top' }]}
                                value={formData.sistemaNeurologico}
                                onChangeText={(text) => setFormData({...formData, sistemaNeurologico: text})}
                                placeholder="Avalia√ß√£o do sistema neurol√≥gico"
                                multiline
                            />
                        </View>
                        
                        <View style={styles.formRow}>
                            <Text style={styles.formLabel}>Sistema Geniturin√°rio:</Text>
                            <TextInput
                                style={[styles.textInput, { height: 80, textAlignVertical: 'top' }]}
                                value={formData.sistemaGeniturinario}
                                onChangeText={(text) => setFormData({...formData, sistemaGeniturinario: text})}
                                placeholder="Avalia√ß√£o do sistema geniturin√°rio"
                                multiline
                            />
                        </View>
                        
                        <View style={styles.formRow}>
                            <Text style={styles.formLabel}>Sistema Musculoesquel√©tico:</Text>
                            <TextInput
                                style={[styles.textInput, { height: 80, textAlignVertical: 'top' }]}
                                value={formData.sistemaMusculoesqueletico}
                                onChangeText={(text) => setFormData({...formData, sistemaMusculoesqueletico: text})}
                                placeholder="Avalia√ß√£o do sistema musculoesquel√©tico"
                                multiline
                            />
                        </View>
                        
                        <View style={styles.formRow}>
                            <Text style={styles.formLabel}>Sistema Dermatol√≥gico:</Text>
                            <TextInput
                                style={[styles.textInput, { height: 80, textAlignVertical: 'top' }]}
                                value={formData.sistemaDermatologico}
                                onChangeText={(text) => setFormData({...formData, sistemaDermatologico: text})}
                                placeholder="Avalia√ß√£o do sistema dermatol√≥gico"
                                multiline
                            />
                        </View>
                        
                        <View style={styles.formRow}>
                            <Text style={styles.formLabel}>Observa√ß√µes:</Text>
                            <TextInput
                                style={[styles.textInput, { height: 80, textAlignVertical: 'top' }]}
                                value={formData.observacoesSistemas}
                                onChangeText={(text) => setFormData({...formData, observacoesSistemas: text})}
                                placeholder="Observa√ß√µes sobre avalia√ß√£o dos sistemas"
                                multiline
                            />
                        </View>
                    </View>
                );
                
            case 'condutaFisioterapeutica':
                return (
                    <View style={styles.formContent}>
                        <View style={styles.formRow}>
                            <Text style={styles.formLabel}>Hip√≥tese Diagn√≥stica:</Text>
                            <TextInput
                                style={[styles.textInput, { height: 80, textAlignVertical: 'top' }]}
                                value={formData.hipoteseDiagnostica}
                                onChangeText={(text) => setFormData({...formData, hipoteseDiagnostica: text})}
                                placeholder="Hip√≥tese diagn√≥stica fisioterap√™utica"
                                multiline
                            />
                        </View>
                        
                        <View style={styles.formRow}>
                            <Text style={styles.formLabel}>Objetivos Terap√™uticos:</Text>
                            <TextInput
                                style={[styles.textInput, { height: 80, textAlignVertical: 'top' }]}
                                value={formData.objetivosTerapeuticos}
                                onChangeText={(text) => setFormData({...formData, objetivosTerapeuticos: text})}
                                placeholder="Objetivos terap√™uticos estabelecidos"
                                multiline
                            />
                        </View>
                        
                        <View style={styles.formRow}>
                            <Text style={styles.formLabel}>Plano Terap√™utico:</Text>
                            <TextInput
                                style={[styles.textInput, { height: 80, textAlignVertical: 'top' }]}
                                value={formData.planoTerapeutico}
                                onChangeText={(text) => setFormData({...formData, planoTerapeutico: text})}
                                placeholder="Plano terap√™utico proposto"
                                multiline
                            />
                        </View>
                        
                        <View style={styles.formRow}>
                            <Text style={styles.formLabel}>Frequ√™ncia do Tratamento:</Text>
                            <TextInput
                                style={styles.textInput}
                                value={formData.frequenciaTratamento}
                                onChangeText={(text) => setFormData({...formData, frequenciaTratamento: text})}
                                placeholder="Frequ√™ncia recomendada para tratamento"
                            />
                        </View>
                        
                        <View style={styles.formRow}>
                            <Text style={styles.formLabel}>Observa√ß√µes:</Text>
                            <TextInput
                                style={[styles.textInput, { height: 80, textAlignVertical: 'top' }]}
                                value={formData.observacoesConduta}
                                onChangeText={(text) => setFormData({...formData, observacoesConduta: text})}
                                placeholder="Observa√ß√µes sobre a conduta fisioterap√™utica"
                                multiline
                            />
                        </View>
                    </View>
                );
                
            default:
                return (
                    <View style={styles.placeholderContent}>
                        <Text style={styles.placeholderText}>
                            Conte√∫do espec√≠fico desta se√ß√£o ser√° implementado aqui
                        </Text>
                    </View>
                );
        }
    };

    return (
        <SafeAreaView style={styles.container}>
            <View style={styles.header}>
                {/* Informa√ß√µes do Paciente */}
                <View style={styles.pacienteInfo}>
                    <Text style={styles.pacienteNome}>{paciente.nome}</Text>
                    <Text style={styles.pacienteProntuario}>Prontu√°rio: {paciente.prontuario}</Text>
                </View>
            </View>

            <KeyboardAvoidingView 
                style={styles.keyboardAvoidingView}
                behavior={Platform.OS === 'ios' ? 'padding' : 'height'}
                keyboardVerticalOffset={Platform.OS === 'ios' ? 100 : 0}
            >
                <ScrollView 
                    style={styles.content} 
                    showsVerticalScrollIndicator={false}
                    contentContainerStyle={styles.scrollContent}
                    keyboardShouldPersistTaps="handled"
                    automaticallyAdjustKeyboardInsets={true}
                >
                    <Text style={styles.title}>Exame F√≠sico</Text>
                    <Text style={styles.subtitle}>Selecione uma se√ß√£o para expandir</Text>
                    
                    {/* Se√ß√µes Colaps√°veis */}
                    <View style={styles.sectionsContainer}>
                        {sections.map((section) => (
                            <View key={section.key} style={styles.sectionWrapper}>
                                <TouchableOpacity 
                                    style={styles.sectionHeader}
                                    onPress={() => toggleSection(section.key)}
                                    activeOpacity={0.7}
                                >
                                    <View style={styles.sectionHeaderLeft}>
                                        <Text style={styles.sectionIcon}>{section.icon}</Text>
                                        <Text style={styles.sectionTitle}>{section.title}</Text>
                                    </View>
                                    <Text style={[
                                        styles.expandIcon,
                                        expandedSections[section.key] && styles.expandIconRotated
                                    ]}>
                                        ‚ñº
                                    </Text>
                                </TouchableOpacity>
                                
                                {expandedSections[section.key] && (
                                    <View style={styles.sectionContent}>
                                        {renderSectionContent(section.key)}
                                    </View>
                                )}
                            </View>
                        ))}
                    </View>
                </ScrollView>
            </KeyboardAvoidingView>
            
            <Footer navigation={navigation} currentScreen="ExameFisico" />
        </SafeAreaView>
    );
};

const styles = StyleSheet.create({
    container: {
        flex: 1,
        backgroundColor: '#f8f9fa',
    },
    header: {
        flexDirection: 'row',
        justifyContent: 'space-between',
        alignItems: 'center',
        paddingHorizontal: 20,
        paddingTop: 20,
        paddingBottom: 20,
        backgroundColor: '#007bff',
    },
    pacienteInfo: {
        flex: 1,
        alignItems: 'center',
    },
    pacienteNome: {
        fontSize: 22,
        fontWeight: 'bold',
        color: '#fff',
        marginBottom: 4,
        textAlign: 'center',
    },
    pacienteProntuario: {
        fontSize: 16,
        color: '#fff',
        opacity: 0.9,
        textAlign: 'center',
    },
    keyboardAvoidingView: {
        flex: 1,
        width: '100%',
    },
    content: {
        flex: 1,
        paddingHorizontal: 20,
    },
    scrollContent: {
        paddingVertical: 20,
        paddingBottom: 100,
    },
    title: {
        fontSize: 28,
        fontWeight: 'bold',
        color: '#343a40',
        textAlign: 'center',
        marginBottom: 10,
    },
    subtitle: {
        fontSize: 16,
        color: '#6c757d',
        textAlign: 'center',
        marginBottom: 30,
    },
    sectionsContainer: {
        gap: 15,
    },
    sectionWrapper: {
        backgroundColor: '#fff',
        borderRadius: 12,
        shadowColor: '#000',
        shadowOffset: { width: 0, height: 2 },
        shadowOpacity: 0.1,
        shadowRadius: 4,
        elevation: 3,
        overflow: 'hidden',
    },
    sectionHeader: {
        flexDirection: 'row',
        justifyContent: 'space-between',
        alignItems: 'center',
        padding: 20,
        backgroundColor: '#f8f9fa',
        borderBottomWidth: 1,
        borderBottomColor: '#e9ecef',
    },
    sectionHeaderLeft: {
        flexDirection: 'row',
        alignItems: 'center',
        flex: 1,
    },
    sectionIcon: {
        fontSize: 24,
        marginRight: 15,
    },
    sectionTitle: {
        fontSize: 16,
        fontWeight: '600',
        color: '#343a40',
        flex: 1,
    },
    expandIcon: {
        fontSize: 16,
        color: '#6c757d',
        fontWeight: 'bold',
        transform: [{ rotate: '0deg' }],
    },
    expandIconRotated: {
        transform: [{ rotate: '180deg' }],
    },
    sectionContent: {
        padding: 20,
        backgroundColor: '#fff',
    },
    placeholderContent: {
        backgroundColor: '#f8f9fa',
        borderRadius: 8,
        padding: 15,
        borderLeftWidth: 4,
        borderLeftColor: '#007bff',
    },
    placeholderText: {
        fontSize: 13,
        color: '#6c757d',
        fontStyle: 'italic',
        textAlign: 'center',
    },
    formContent: {
        gap: 15,
    },
    formRow: {
        marginBottom: 15,
    },
    formLabel: {
        fontSize: 14,
        fontWeight: '600',
        color: '#343a40',
        marginBottom: 8,
    },
    textInput: {
        borderWidth: 1,
        borderColor: '#ced4da',
        borderRadius: 8,
        padding: 12,
        fontSize: 14,
        backgroundColor: '#fff',
        color: '#495057',
    },
    checkboxText: {
        fontSize: 14,
        color: '#343a40',
    },
    checkboxTextSelected: {
        fontWeight: 'bold',
        color: '#007bff',
    },
    statusContainer: {
        flexDirection: 'row',
        gap: 12,
        marginTop: 10,
        marginBottom: 10,
    },
    statusButton: {
        paddingVertical: 12,
        paddingHorizontal: 18,
        backgroundColor: '#f8f9fa',
        borderRadius: 25,
        borderWidth: 2,
        borderColor: '#e9ecef',
        minWidth: 120,
        justifyContent: 'center',
        alignItems: 'center',
        shadowColor: '#000',
        shadowOffset: { width: 0, height: 1 },
        shadowOpacity: 0.1,
        shadowRadius: 2,
        elevation: 2,
    },
    statusButtonSelected: {
        backgroundColor: '#007bff',
        borderColor: '#0056b3',
        shadowColor: '#007bff',
        shadowOpacity: 0.3,
        elevation: 4,
    },
    statusButtonText: {
        fontSize: 15,
        color: '#495057',
        fontWeight: '500',
    },
    statusButtonTextSelected: {
        color: '#ffffff',
        fontWeight: '600',
    },
});

export default ExameFisico;

